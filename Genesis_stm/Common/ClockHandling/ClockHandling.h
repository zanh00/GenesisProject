//////////////////////////////////////////////////////////////////////////////
/*
 *  ClockHandling.h
 *  
 *  Clock and timer handling module.
 * 
 *  Created on: July 13, 2024
 *      Author: Žan Hertiš
 */
 ////////////////////////////////////////////////////////////////////////////

#ifndef CLOCK_HANDLING_H
#define CLOCK_HANDLING_H

//////////////////////////////////////////////////////////////////////////////
// Includes 
//////////////////////////////////////////////////////////////////////////////

#include <stdint.h>
#include <stdbool.h>
#include "main.h"
// #include "../../Drivers/STM32H7xx_HAL_Driver/inc/stm32h7xx_hal_rcc.h"
// #include "../../Drivers/STM32H7xx_HAL_Driver/inc/stm32h7xx_hal_tim.h"
// #include "../../Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
// #include "../../Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h755xx.h"

//////////////////////////////////////////////////////////////////////////////
// Defines 
//////////////////////////////////////////////////////////////////////////////

typedef struct
{
    TIM_HandleTypeDef *htim;
    uint32_t frequency;
    float Dmin;
    float Dmax;
    uint32_t CCRmin;
    uint32_t CCRmax;
} ClockHandling_PWMConfig_t;

//////////////////////////////////////////////////////////////////////////////
// Function prototypes 
//////////////////////////////////////////////////////////////////////////////

uint32_t ClockHandling_GetTimerClkFreq(TIM_HandleTypeDef *htim);
void ClockHandling_PWMInit(ClockHandling_PWMConfig_t *config);

#endif /* CLOCK_HANDLING_H */
